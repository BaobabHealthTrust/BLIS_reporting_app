<html>
<head>
<style>
  .even td {
      border: 1px solid #ccc;
      color: #1f3b5e;
      background-color: #cfe4cd;
      padding: 2px;
      vertical-align: middle;
  }

  .odd td {
      border: 1px solid #ccc;
      color: #1f3b5e;
      padding: 2px;
      vertical-align: middle;
  }

  th {
      border: 1px dotted #ccc !important;
  }

  .action  {
      background-color: white !important;
      border: none !important;
  }

  .btn{
      opacity: 0.76 !important;
  }

  .uni{
      min-width: 70px;
  }

  .no-margin{
      margin: 0px !important;
      width: 50% !important;
  }
  #new_category_textbox{
      width: 30%;
  }

  #shield{
      position: absolute;
      z-index: 2000;
      top: 0px;
      left: 0px;
      width: 100%;
      height: 100%;
      background: gray;
      opacity: 0.7;
      display: none;
  }

  #popup{
      position: fixed;
      z-index: 2001;
      left: 25%;
      width: 700px;
      max-width: 700px;
      top: 50px !important;
      height: 700px !important;
      background-color: whitesmoke;
      border: 1.5px solid darkslategray;
      border-radius: 8px;
      opacity: 1 !important;
      display: none;
  }

  #popup-header{
      background-color: whitesmoke;
      height: 30px;
      font-size: 120%;
  }
  #content{
       height: 610px;
       width: 700px;
  }
  #popup-content{
      height: 610px !important;
      width: 700px;
      overflow-y: auto;
      background: white;
  }
  #popup-footer{
      height: 30px;
      background-color: whitesmoke;
      border-top: 1px solid lightgray;
  }

  #table-content{
      margin-top: 5px;
      padding-top:5px;
      width: 100%
  }
  .row_even, .row_odd{
      width: 100% !important;
  }
  .labell, .value{
      height: 35px;
      width: 50% !important;
      vertical-align: middle !important;
      padding-top: 8px !important;
  }
  .labell {
      font-size: 1em;
      font-weight: bold;
      border-right: 1px dotted lightgray !Important;
  }
  ul {
      list-style-type: none;
  }
  .checkbox input {
      padding-top: 0px !important;
      background: lightblue !important;
  }
  .green-stripe, .red-stripe{
      width: 90px !important;
      min-width: 90px !important;
  }
   td{
       vertical-align: middle !important;
   }
   h4{
       width: 380px;
       background-color: darkseagreen;
       border: 1px dotted;
       margin-top: 0px;
       padding: 5px;
       font-size: 1.2em;
   }

   #measure-table{
       margin-top: 8px;
       margin-bottom: 15px;
       display: table;
       width: 98%;
       padding-top: 10px !important;
   }
  #measure-table .table-row{
      display: table-row;
      table-layout:fixed;
  }

  #measure-table .td{
      display: table-cell;
      text-align: center;
  }

  #measure-table input{
      max-width: 600px !important;
      margin: 0px !important;
  }



   #measure-table td{
       border: 0.5px solid lightgray;
   }

   .data{
       padding-top: 5px !important;
       vertical-align: top !important;
   }

   #popup .table td{
       padding: 3px !important;
   }
   .add-button{
       font-size: 0.85em;
   }
 body, #popup{
     font-family: "Palatino Linotype", "Book Antiqua", Palatino, serif !important;
 }
    .numeric-row input,  .numeric-row select{
        width: 60px !important;
    }
</style>
</head>
<body>

<div id = "popup">
  <table style="width:700px;height:700px;">
    <tr >
        <th id="popup-header">
         Header
        </th>
    </tr>
    <tr>
        <td id="content">
          <div id="popup-content">

          </div>
        </td>
    </tr>
    <tr>
      <td id="popup-footer">
        <a id="btn-save" style="width:12%" class="btn btn-success pull-right" >Save</a>
        <a style="width:12%" class="btn btn-danger pull-left" href="javascript:cancel();">Cancel</a>
      </td>
    </tr>
   </table>

</div>

<div id="mainPage" class="page" style='width:85%;'>
  <h3> <%= params[:title]%> </h3>
  <p style="text-align: right;">
    <a href="" rel="facebox">Page Help</a>
  </p>

 <table style="width: 100%;"><tr>
   <td style="width:85%;">
          <a class="btn btn-primary" type='button warning' href="javascript:editUser(-1, '')">
            Add New Test Type
          </a>
   </td>
   <td >
            <input id='text' type="text" value="<%= params[:search_string]%>" class="form-control" placeholder="Search for...">
   </td>
   <td style="padding-bottom: 10px;">
             <button onclick="search()" class="btn btn-default" type="button">Go!</button>
   </td>
 </tr></table>
<%= @data.html_safe%>
</div>
<div id="shield">
</div>
</body>
<script>

    var greens = document.getElementsByClassName("green-stripe");
    var reds = document.getElementsByClassName("red-stripe");

    for(var i in greens){
        greens[i].className += " btn-warning";
        try {
            var link = greens[i].getAttribute("href");
            greens[i].setAttribute("tid", link.match(/\d+$/));
            greens[i].onclick = function () {
                buildEditPopup(this.getAttribute("tid"));
            }
            greens[i].removeAttribute("href");
        }catch(e){}

    }

    for(var i in reds){
        reds[i].className += " btn-danger";
        try {
            var link = reds[i].getAttribute("href");
            reds[i].setAttribute("tid", link.match(/\d+$/));
            reds[i].onclick = function () {
                buildEditPopup(this.getAttribute("tid"));
            }
            reds[i].removeAttribute("href");
        }catch(e){}

    }

    function buildEditPopup(tid) {


        jQuery.ajax({url: "test_type_edit_popup?tid="+tid,
                    success: function (response) {
                        response = JSON.parse(response)
                        display("Edit Test Type", true);
                        var details = document.createElement("div");
                        details.style.width = "100%";
                        details.innerHTML = response['test_type_input_info'];
                        __$("popup-content").appendChild(details);
                        var specimen_types = document.createElement("div");
                        specimen_types.style.width = "100%";
                        specimen_types.innerHTML = "<h4>Compatible Specimens</h4>" + response["compatible_specimens"];
                        __$("popup-content").appendChild(specimen_types);

                        var measures = document.createElement("div");
                        measures.style,width = "100%";
                        measures.innerHTML = "<h4>Measures</h4>";
                        measures.appendChild(getMeasuresTable(response['measures_data']));

                        __$("popup-content").appendChild(measures);

                        //window.location = '/config/test_types?title=Test Types';
                    }
                }
        ).fail(function(xhr, status, error){
                    alert(error);
                });
    }

    function __$(id){
        return document.getElementById(id);
    }

    function search(){
        window.location = '/config/test_types?title=Test Types&search_string=' + __$('text').value;
    }

    function  cancel(){
        hidePopup();
    }
    function display(headerTitle, showSave){

        __$("shield").style.display = "table-cell";
        __$("popup").style.display = "table-cell";
        __$("popup-header").innerHTML = headerTitle;

        if (showSave == true){
            __$("btn-save").style.display = "block";
        }else{
            __$("btn-save").style.display = "none";
        }
    }
    function hidePopup(){

        __$("shield").style.display = "none";
        __$("popup").style.display = "none";
        __$("popup-header").innerHTML = "";
        __$("popup-content").innerHTML = "";
    }

    function post(userId){

        var params = {};
        params["userId"] = userId;
        var requiredFields = ['username', 'actualName', 'password', 'level', 'labSection', 'email', 'phone', 'canverify'];

        for( var i = 0; i < requiredFields.length; i++) {
            var value = "";
            if (requiredFields[i] == 'labSection') {

                value = [];
                var nodes = document.getElementsByClassName("lab-section-checkbox");
                for (var j = 0; j < nodes.length; j++){
                    if (nodes[j].checked){
                        value.push(nodes[j].value);
                    }
                }
                value = value.join(',');
            }else if (requiredFields[i] == 'canverify'){
                value =  __$(requiredFields[i]).checked ? 1 : 0;
            }else{
                value = __$(requiredFields[i]).value;
            }

            params[requiredFields[i]] = value;
        }

        var post_url = 'post_data';

        jQuery.ajax({url: post_url,
                    type: "POST",
                    data: params,
                    success: function (response) {
                        window.location = '/config/user_accounts?title=User Accounts';
                    }
                }
        ).fail(function(xhr, status, error){
                    alert(error);
        });
    }

    function check_if_new_category(select_obj)
    {
        var value = $('#cat_code').val();
        if(value == -1)
        {
            $('#new_category').show();
        }
        else
        {
            $('#new_category_textbox').val("");
            $('#new_category').hide();
        }
    }

    function getMeasuresTable(data){
        if (data){
            var table = document.createElement('table');
            table.id = "measure-table";

            //****** build header ***********
            var header = document.createElement("tr");
            header.className = "table-row";
            table.appendChild(header);

            var headerData = ["Delete", "Name", "Type", "Values", "Unit"]

            for (var i in headerData){
                var node = document.createElement("td");
                node.innerHTML = headerData[i];
                node.className = "td td-" + (parseInt(i) + 1);
                header.appendChild(node);
            }

            //****** build contents *******


            for (var j in data) {

                var measure = data[j];
                console.log(measure);
                var msr = document.createElement("tr");
                msr.className = "table-row";
                msr.id = measure["measure"]["measureId"];
                table.appendChild(msr);

                var cols = [
                    ["delete", "checkbox"],
                    ["name", "text"],
                    ["type", "dropdown"],
                    ["values", "dynamic"],
                    ["unit", "text"]
                ];

                for (var i in cols) {

                    var node = document.createElement("td");
                    node.className = "td data data-" + (parseInt(i) + 1);

                    switch (cols[i][0]) {
                        case 'delete':

                            var inp = document.createElement("input");
                            inp.className = "delete";
                            inp.setAttribute("type", cols[i][1]);
                            inp.style.width = "50px";
                            node.appendChild(inp);
                            break;
                        case 'name':

                            var inp = document.createElement("input");
                            inp.className = "name name_" + measure["measure"]["measureId"];
                            inp.setAttribute("type", cols[i][1]);
                            inp.style.width = "105px";
                            inp.value = measure["measure"]["name"];
                            node.appendChild(inp);
                            break;
                        case 'type':

                            var inp = document.createElement("select");
                            inp.id = "select_" + measure["measure"]["measureId"];
                            var options = [["Numeric Range", 'numeric'], ["Alphanumeric Values", 'options'], ["Freetext", 'freetext']]

                            for (var k in options){

                                var opt = document.createElement("option");
                                opt.setAttribute("value", options[k][1]);
                                opt.innerHTML = options[k][0];
                                if (measure["range_type"] == options[k][1])
                                    opt.selected = true;

                                inp.appendChild(opt);
                            }

                            inp.style.width = "100px";
                            node.appendChild(inp);
                            break;
                        case 'values':

                            if (measure["range_type"] == "numeric"){

                                var table2 = document.createElement("table");
                                table2.className = "numeric-table";
                                node.appendChild(table2);

                                var addButton = document.createElement("a");
                                addButton.className = "add-button";
                                addButton.id = "add_" + measure["measure"]["measureId"];
                                addButton.innerHTML = "<br /><span>Add Another<span>";
                                addButton.onclick = function(){
                                    var input = document.createElement("input");
                                    input.style.width = "40%";
                                    var new_row = createRow('0', 'numeric-row', ['range', 'gender', 'age_range'], {});
                                    this.parentNode.childNodes[0].appendChild(new_row);
                                }

                                node.appendChild(addButton);


                                for(var n in measure["ref_ranges"]){
                                    var row = createRow(measure["ref_ranges"][n]["id"], 'numeric-row', ['range', 'gender', 'age_range'], measure["ref_ranges"][n]);
                                    table2.appendChild(row);
                                }
                            }else if (measure["range_type"] == "freetext"){
                                //leave blank
                            }else if (measure["range_type"] == "options"){
                                for(var n in measure["range_values"]){
                                    var input = document.createElement("input");
                                    input.setAttribute("value", measure["range_values"][n]);
                                    input.style.width = "40%";
                                    node.appendChild(input);
                                    node.innerHTML += " / ";
                                }

                                var addButton = document.createElement("a");
                                addButton.className = "add-button";
                                addButton.id = "add_" + measure["measure"]["measureId"];
                                addButton.innerHTML = "<br /><span>Add Another<span>";
                                addButton.onclick = function(){
                                    var input = document.createElement("input");
                                    input.style.width = "40%";
                                    this.parentNode.insertBefore(input, this);
                                    this.parentNode.insertBefore(document.createTextNode(" / "), this);
                                }

                                node.appendChild(addButton);
                            }

                            break;
                        case 'unit':

                            var inp = document.createElement("input");
                            inp.className = "unit unit_" + measure["measure"]["measureId"];
                            inp.setAttribute("type", cols[i][1]);
                            inp.style.width = "90px";
                            inp.value = measure["measure"]["unit"];
                            node.appendChild(inp);
                            break;
                    }

                    msr.appendChild(node);
                }
            }

            return table;
        }
    }

 function createRow(pos, clas, options, data){
     if (parseInt(pos) >= 0){
         var row = document.createElement("tr")
         row.className = clas;
         row.id = "numeric_row_"+pos;

         for (var i = 0; i < options.length; i ++){
             if (options[i] == 'range'){

                 var td = document.createElement("td");
                 row.appendChild(td);

                 var input1 = document.createElement("input");
                 input1.className = "min";
                 if (data["rangeLower"])
                    input1.value = data["rangeLower"];
                 td.appendChild(input1);

                 var td = document.createElement("td");
                 row.appendChild(td);

                 var input2 = document.createElement("input");
                 input2.className = "max";
                 if(data["rangeUpper"])
                    input2.value = data["rangeUpper"];
                 td.appendChild(input2);
             }else if(options[i] == "gender"){

                 var td = document.createElement("td");
                 row.appendChild(td);

                 var sel = document.createElement("select");
                 sel.className = "gender";
                 row.appendChild(sel);

                 var dt = [["Both", "B"], ["Male", "M"], ["Female", "F"]];

                 for (var k in dt){

                     var od = document.createElement("option");
                     od.setAttribute("value", dt[k][1]);
                     if(dt[k][1] == data["sex"])
                        od.selected = true;
                     od.innerHTML = dt[k][0];
                     sel.appendChild(od);
                 }
             }else if(options[i] == "age_range"){

                 var td = document.createElement("td");
                 row.appendChild(td);

                 var input1 = document.createElement("input");
                 input1.className = "age_min";
                 if(data["ageMin"])
                    input1.value = data["ageMin"];
                 td.appendChild(input1);

                 var td = document.createElement("td");
                 row.appendChild(td);

                 var input2 = document.createElement("input");
                 input2.className = "ageMax";
                 if(data["ageMax"])
                    input2.value = data["ageMax"];
                 td.appendChild(input2);
             }
         }
     }
     return row;
 }

</script>
</html>
